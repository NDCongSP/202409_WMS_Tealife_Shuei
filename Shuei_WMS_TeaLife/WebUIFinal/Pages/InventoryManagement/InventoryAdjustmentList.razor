@page "/inventory-adjustment-list"
@using Application.DTOs
@using FBT.ShareModels.WMS
@using Microsoft.AspNetCore.Authorization
@using WebUIFinal.Core
@using WebUIFinal
@inject IStringLocalizer<InventoryResources> _localizer
@inject IStringLocalizer<CommonResources> _CLoc

@attribute [Authorize]
@if (adjustment == null)
{
    <p><em>@_CLoc["Loading"]</em></p>
}
else
{
    <RadzenTemplateForm Data="@_searchModel"  Submit="@((AdjustmentSearchModel args) => { OnSearch(args); })">
        <RadzenRow Gap="2rem" Class="rz-p-0 rz-p-lg-2">
            <RadzenColumn Size="12" SizeMD="12">
                <RadzenFieldset Text="@_localizer["Search Adjustment Records"]">
                    <RadzenStack Gap="5px">
                        <RadzenRow AlignItems="AlignItems.Center">
                            <RadzenColumn SizeXS="12" SizeSM="4">
                                <RadzenFormField Text="@_localizer["AdjustmentNo"]" Variant="Variant.Outlined" Style="width:100%">
                                    <RadzenTextBox @bind-Value="@_searchModel.AdjustmentNo" Name="AdjustmentNo" />
                                </RadzenFormField>
                            </RadzenColumn>
                            <RadzenColumn SizeXS="12" SizeSM="4">
                                <RadzenFormField Text="@_CLoc["Location"]" Variant="Variant.Outlined" Style="width: 100%;">
                                    <RadzenDropDown @bind-Value=@_searchModel.Location Data=@locations Name="_dropDownSelectTenant"
                                                    TextProperty="LocationName" Placeholder="@_CLoc["Select"]" Change="() => UpdateListBin()"
                                                    ValueProperty="Id" AllowClear=true Chips=true />
                                </RadzenFormField>
                            </RadzenColumn>

                            <RadzenColumn SizeXS="12" SizeSM="4">
                                <RadzenFormField Text="@_CLoc["Bin"]" Variant="Variant.Outlined" Style="width: 100%;">
                                    <RadzenDropDown @bind-Value=@_searchModel.Bin Data=@bins Name="_dropDownSelectTenant"
                                                    TextProperty="BinCode" Placeholder="@_CLoc["Select"]"
                                                    ValueProperty="Id" AllowClear=true Chips=true />
                                </RadzenFormField>
                            </RadzenColumn>
                        </RadzenRow>                    
                        <RadzenRow AlignItems="AlignItems.Center">
                            <RadzenColumn SizeXS="12" SizeSM="4">
                                <RadzenFormField Text="@_CLoc["Status"]" Variant="Variant.Outlined" Style="width: 100%;">
                                    <RadzenDropDown @bind-Value="@_searchModel.Status" Data=@GetDisplayAdjustmentStatus() Name="_dropDownStatus"
                                                    Multiple=false AllowClear=true Chips=true
                                                    ValueProperty="Value" TextProperty="DisplayValue" />
                                </RadzenFormField>
                            </RadzenColumn>
                            <RadzenColumn SizeXS="12" SizeSM="4">
                                <RadzenFormField Text="@_localizer["ReceivedDate"]" Variant="Variant.Outlined" Style="width: 100%;">
                                    <RadzenDatePicker @bind-Value="@_searchModel.ReceiveDateFrom" Placeholder="@_localizer["ReceivedDate"]" />
                                </RadzenFormField>
                            </RadzenColumn>
                            <RadzenColumn SizeXS="12" SizeSM="4">
                                <RadzenFormField Text="~" Variant="Variant.Outlined" Style="width: 100%;">
                                    <RadzenDatePicker @bind-Value="@_searchModel.ReceiveDateTo" Placeholder="@_localizer["ReceivedDate"]" />
                                </RadzenFormField>
                            </RadzenColumn>
                        </RadzenRow>
                        <RadzenColumn SizeXS="6" SizeSM="3">
                            <RadzenStack Orientation="Orientation.Horizontal" JustifyContent="JustifyContent.End" AlignItems="AlignItems.Center" Gap="1rem" Wrap="FlexWrap.Wrap" class="rz-mt-2">
                                <RadzenButton Variant="Variant.Flat" Text="@_CLoc["Clear"]" Icon="cancel" ButtonType="ButtonType.Button" ButtonStyle="ButtonStyle.Base" Size="ButtonSize.Large" Click="@ClearFilter" />
                                <RadzenButton Variant="Variant.Flat" Text="@_CLoc["Search"]" Icon="search" ButtonType="ButtonType.Submit" Size="ButtonSize.Large" />
                            </RadzenStack>
                        </RadzenColumn>
                    </RadzenStack>
                </RadzenFieldset>
            </RadzenColumn>
        </RadzenRow>
    </RadzenTemplateForm>
    <RadzenRow Gap="2rem" Class="rz-p-0 rz-p-lg-2">
        <RadzenColumn SizeXS="12" SizeMD="12">
            <RadzenStack>
                <RadzenFieldset Text="@_localizer["Adjustment List"]">
                    <RadzenStack Orientation="Orientation.Horizontal" JustifyContent="JustifyContent.End"
                                 AlignItems="AlignItems.Center" Gap="1rem" Wrap="FlexWrap.Wrap" class="rz-mt-2">


                        <RadzenButton Variant="Variant.Flat" Shade="Shade.Dark"
                                      Text="@_CLoc["Create"]" Icon="create" ButtonStyle="ButtonStyle.Success" Click=@(args => AddNewItemAsync()) />
                    </RadzenStack>
                    <RadzenDataGrid @ref="_adjustmentGrid" Data="@_filteredModel" TItem="InventAdjustmentDTO" AllowFiltering="true" class="custom-grid" PageSizeText="@_CLoc["items per page"]"
                                    AllowPaging="true" PageSize="30" AllowSorting="true"  ShowPagingSummary=@_showPagerSummary PagingSummaryFormat="@_pagingSummaryFormat" PageSizeOptions="@Constants.PageSizeOptions" EmptyText="@_CLoc["No records to display."]" >
                                     
                        <Columns>
                            <RadzenDataGridColumn Width="200" TItem="InventAdjustmentDTO" Property="AdjustmentNo" Title="@_localizer["AdjustmentNo"]" TextAlign="TextAlign.Center" Filterable="false">
                                <Template Context="data">
                                    <a href="@($"/adjustment-details/{_CLoc["Detail.Edit"]}{_localizer["WarehouseAdjustment"]}|{@data.AdjustmentNo}")">@data.AdjustmentNo</a>

                                </Template>
                            </RadzenDataGridColumn>
                            <RadzenDataGridColumn TItem="InventAdjustmentDTO" Filterable="false" Property="LocationName" Title="@_CLoc["Location"]" />
                            <RadzenDataGridColumn TItem="InventAdjustmentDTO" Filterable="false" Property="BinCode" Title="@_CLoc["Bin"]" />
                            <RadzenDataGridColumn TItem="InventAdjustmentDTO" Filterable="false" Property="AdjustmentDate" Title="@_localizer["Date"]" FormatString="{0:yyyy/MM/dd}" />
                            <RadzenDataGridColumn TItem="InventAdjustmentDTO" Filterable="false" Property="PersonInCharge" Title="@_localizer["PersonInCharge"]" />
                            <RadzenDataGridColumn TItem="InventAdjustmentDTO" Filterable="false" Property="Status" Title="@_CLoc["Status"]">
                             <Template Context="data">
                                    @_localizer[data.Status.ToString()]
                                    </Template>
                                </RadzenDataGridColumn>
                        </Columns>
                    </RadzenDataGrid>
                </RadzenFieldset>
            </RadzenStack>
        </RadzenColumn>
    </RadzenRow>
}

@code {
    public class AdjustmentSearchModel
    {
        public string? AdjustmentNo { get; set; }
        public string? Location { get; set; }
        public string? Bin { get; set; }
        public DateTime? AdjustmentDate { get; set; }
        public DateTime? ReceiveDateFrom { get; set; }
        public DateTime? ReceiveDateTo { get; set; }
        public EnumInventoryAdjustmentStatus? Status { get; set; }
    }

    List<InventAdjustmentDTO> _filteredModel = new();
    AdjustmentSearchModel _searchModel = new();

    private void OnSearch(AdjustmentSearchModel args)
    {
        _filteredModel = adjustment;

        if (!string.IsNullOrEmpty(args.AdjustmentNo))
        {
            _filteredModel = _filteredModel.Where(_ => _.AdjustmentNo.Contains(args.AdjustmentNo, StringComparison.OrdinalIgnoreCase)).ToList();
        }

        if (!string.IsNullOrEmpty(args.Location))
        {
            _filteredModel = _filteredModel.Where(r => r.Location == args.Location).ToList();
        }
        if (!string.IsNullOrEmpty(args.Bin))
        {
            _filteredModel = _filteredModel.Where(r => r.Bin == args.Bin).ToList();
        }
        if (args.ReceiveDateFrom.HasValue)
        {
            _filteredModel = _filteredModel.Where(_ => _.AdjustmentDate >= args.ReceiveDateFrom.Value).ToList();
        }

        if (args.ReceiveDateTo.HasValue)
        {
            _filteredModel = _filteredModel.Where(_ => _.AdjustmentDate <= args.ReceiveDateTo.Value).ToList();
        }
        if (args.Status.HasValue)
        {
            _filteredModel = _filteredModel.Where(item => item.Status == args.Status).ToList(); // Corrected the lambda parameter
        }
        if (args.ReceiveDateFrom.HasValue)
        {
            
        }

        StateHasChanged();
    }

    private void ClearFilter()
    {
        _searchModel = new();
        _filteredModel = adjustment;
        StateHasChanged();
    }
}