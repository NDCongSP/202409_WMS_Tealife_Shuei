@page "/supplierlist"

@using Application.Extentions
@using Microsoft.AspNetCore.Authorization
@using WebUIFinal.Core

@using FBT.ShareModels.Entities
@inject IStringLocalizer<CommonResources> _localizerCommon
@inject IStringLocalizer<SupplierResources> _localizer
@inject IStringLocalizer<NotificationMessageResources> _localizerNotification

@using Application.DTOs


@attribute [Authorize(Policy = "Admin")]
@if (supplier == null || supplier.Count == 0)
{
    <p><em>@_localizerCommon["Loading"]...</em></p>
}
else
{
    <RadzenTemplateForm Data="@_searchModel" Submit="@((SupplierSearchModel args) => { OnSearch(args); })">
        <RadzenRow Gap="2rem" Class="rz-p-0 rz-p-lg-2">
            <RadzenColumn Size="12" SizeMD="12">
                <RadzenFieldset Text="@_localizer["SearchSupplierRecords"]">
                    <RadzenStack Gap="5px">
                        <RadzenRow AlignItems="AlignItems.Center">
                            <RadzenColumn SizeXS="12" SizeSM="4">
                                <RadzenFormField Text="@_localizer["Supplier Name"]" Variant="Variant.Outlined" Style="width:100%">
                                    <RadzenTextBox @bind-Value="@_searchModel.SupplierName" Name="SupplierName" />
                                </RadzenFormField>
                            </RadzenColumn>
                            <RadzenColumn SizeXS="12" SizeSM="4">
                                <RadzenFormField Text="@_localizer["Supplier Id"]" Variant="Variant.Outlined" Style="width:100%">
                                    <RadzenTextBox @bind-Value="@_searchModel.SupplierId" Name="SupplierId" />
                                </RadzenFormField>
                            </RadzenColumn>
                            <RadzenColumn SizeXS="12" SizeSM="4">
                                <RadzenFormField Text="@_localizerCommon["Tenant"]" Variant="Variant.Outlined" Style="width:100%">
                                    <RadzenDropDown @bind-Value="@_searchModel.TenantId"
                                                    Data="tenants"
                                                    TextProperty="@nameof(CompanyTenant.FullName)"
                                                    ValueProperty="@nameof(CompanyTenant.AuthPTenantId)"
                                                    Name="TenantId"
                                                    TValue="int?"
                                                    Multiple=false
                                                    Placeholder="@_localizerCommon["Select"]"
                                                    AllowClear="true" />

                                </RadzenFormField>
                            </RadzenColumn>

                        </RadzenRow>
                        <RadzenColumn SizeXS="6" SizeSM="3">
                            <RadzenStack Orientation="Orientation.Horizontal" JustifyContent="JustifyContent.End" AlignItems="AlignItems.Center" Gap="1rem" Wrap="FlexWrap.Wrap" class="rz-mt-2">
                                <RadzenButton Variant="Variant.Flat" Text="@_localizerCommon["Clear"]" Icon="cancel" ButtonType="ButtonType.Button" ButtonStyle="ButtonStyle.Base" Size="ButtonSize.Large" Click="@ClearFilter" />
                                <RadzenButton Variant="Variant.Flat" Text="@_localizerCommon["Search"]" Icon="search" ButtonType="ButtonType.Submit" Size="ButtonSize.Large" />
                            </RadzenStack>
                        </RadzenColumn>
                    </RadzenStack>
                </RadzenFieldset>
            </RadzenColumn>

        </RadzenRow>
    </RadzenTemplateForm>
    <RadzenRow Gap="1rem" Class="padding-body-content">
        <RadzenColumn SizeXS="12" SizeMD="12">
            <RadzenStack>
                <RadzenFieldset Text="@_localizer["Supplier list"]">
                    <RadzenStack Orientation=Radzen.Orientation.Vertical JustifyContent="Radzen.JustifyContent.Center" AlignItems="AlignItems.Stretch" Gap="5px">
                        <RadzenStack Orientation="Radzen.Orientation.Horizontal" JustifyContent="Radzen.JustifyContent.End"
                                     AlignItems="AlignItems.Center" Gap="1rem" Wrap="Radzen.FlexWrap.Wrap">
                            <RadzenButton Click=@(args => CreateAsync()) Variant="Variant.Flat" Shade="Shade.Dark"
                                          Text="@_localizerCommon["Detail.Create"]" Icon="add_circle" ButtonStyle="ButtonStyle.Success" />
                        </RadzenStack>
                        <RadzenDataGrid Style="width:100%" @ref="_profileGrid" Data="@_filteredModel" TItem="SupplierTenantDTO" AllowFiltering="true" class="custom-grid"
                                        FilterPopupRenderMode="PopupRenderMode.OnDemand" AllowPaging="true" PageSize="20" PageSizeText="@_localizerCommon["items per page"]" AllowSorting="true"
                                        AllowColumnPicking="false" AllowColumnResize="true" AllowGrouping="false" EmptyText="@_localizerCommon["No records to display."]"
                                        GridLines="Radzen.DataGridGridLines.Both" AllowAlternatingRows="false"
                                        ShowPagingSummary=@_showPagerSummary PagingSummaryFormat="@_pagingSummaryFormat" PageSizeOptions="@Constants.PageSizeOptions">
                            <Columns>
                                <RadzenDataGridColumn Width="200px" TItem="SupplierTenantDTO" Property="SupplierName" Title="@_localizer["Supplier Name"]">
                                    <Template Context="data">
                                        <a class="text-green" @onclick="@(() => OpenAsync(data))" style="cursor:pointer;">
                                            @data.SupplierName
                                        </a>
                                    </Template>
                                </RadzenDataGridColumn>
                                <RadzenDataGridColumn Width="200px" Property="@nameof(SupplierTenantDTO.SupplierId)" Title="@_localizer["Supplier Id"]" />
                                <RadzenDataGridColumn Width="200px" Property="@nameof(SupplierTenantDTO.TenantName)" Title="@($"{_localizerCommon["Tenant"]} {_localizerCommon["Name"]}")" />
                                <RadzenDataGridColumn Width="200px" Property="@nameof(SupplierTenantDTO.DataKey)" Title="@_localizerCommon["Data Key"]" />
                            </Columns>
                        </RadzenDataGrid>
                    </RadzenStack>
                </RadzenFieldset>
            </RadzenStack>
        </RadzenColumn>
    </RadzenRow>
}
@code {
    public class SupplierSearchModel
    {
        public string? SupplierId { get; set; }
        public string? SupplierName { get; set; }
        public int? TenantId { get; set; }

    }

    List<SupplierTenantDTO> _filteredModel = new();
    SupplierSearchModel _searchModel = new();

    private void OnSearch(SupplierSearchModel args)
    {
        _filteredModel = supplier;

        if (!string.IsNullOrEmpty(args.SupplierId))
        {
            _filteredModel = _filteredModel
                .Where(_ => !string.IsNullOrEmpty(_.SupplierId) && _.SupplierId.Contains(args.SupplierId, StringComparison.OrdinalIgnoreCase))
                .ToList();
        }
        if (!string.IsNullOrEmpty(args.SupplierName))
        {
            _filteredModel = _filteredModel
                .Where(_ => !string.IsNullOrEmpty(_.SupplierName) && _.SupplierName.Contains(args.SupplierName, StringComparison.OrdinalIgnoreCase))
                .ToList();
        }


        if (args.TenantId.HasValue)
        {
            _filteredModel = _filteredModel
                .Where(r => r.CompanyId == args.TenantId.Value)
                .ToList();
        }


        StateHasChanged();
    }



    private void ClearFilter()
    {
        _searchModel = new();
        _filteredModel = supplier;
        StateHasChanged();
    }
}