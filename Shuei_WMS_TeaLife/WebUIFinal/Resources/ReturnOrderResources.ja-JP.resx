<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="ReturnDate" xml:space="preserve">
    <value>返品日</value>
  </data>
  <data name="ReturnOrderNo" xml:space="preserve">
    <value>返品番号</value>
  </data>
  <data name="ShippingNo" xml:space="preserve">
    <value>関連出庫指示</value>
  </data>
  <data name="ShippingDestination" xml:space="preserve">
    <value>出荷先</value>
  </data>
  <data name="PersonInCharge" xml:space="preserve">
    <value>担当者</value>
  </data>
  <data name="ReturnOrderList" xml:space="preserve">
    <value>返品一覧</value>
  </data>
  <data name="SearchReturnOrder" xml:space="preserve">
    <value>返品注文を検索</value>
  </data>
  <data name="From" xml:space="preserve">
    <value>から</value>
  </data>
  <data name="To" xml:space="preserve">
    <value>まで</value>
  </data>
  <data name="Open" xml:space="preserve">
    <value>返品作成中</value>
  </data>
  <data name="Receiving" xml:space="preserve">
    <value>入荷中</value>
  </data>
  <data name="Received" xml:space="preserve">
    <value>入荷済</value>
  </data>
  <data name="Putaway" xml:space="preserve">
    <value>棚上げ中</value>
  </data>
  <data name="Completed" xml:space="preserve">
    <value>返品完成</value>
  </data>
  <data name="ShippingDate" xml:space="preserve">
    <value>発送日</value>
  </data>
  <data name="Reason" xml:space="preserve">
    <value>理由</value>
  </data>
  <data name="Return.BasicInformation" xml:space="preserve">
    <value>返品注文の基本情報</value>
  </data>
  <data name="Return.Details" xml:space="preserve">
    <value>返品注文の詳細情報</value>
  </data>
  <data name="Return.Qty" xml:space="preserve">
    <value>数量</value>
  </data>
  <data name="EnterQty" xml:space="preserve">
    <value>数量を入力してください</value>
  </data>
  <data name="CreateReceipt" xml:space="preserve">
    <value>入庫指示作成</value>
  </data>
  <data name="FailedToSearchShippingNo" xml:space="preserve">
    <value>配送番号の検索に失敗しました</value>
  </data>
  <data name="ErrorOccurredWhileSearchingProducts" xml:space="preserve">
    <value>商品検索中にエラーが発生しました</value>
  </data>
  <data name="DoYouWantToCreateANewReturnOrder" xml:space="preserve">
    <value>新しい返品注文を作成しますか？</value>
  </data>
  <data name="CreateReturnOrder" xml:space="preserve">
    <value>返品注文を作成する</value>
  </data>
  <data name="SuccessfullyCreatedReturnOrder" xml:space="preserve">
    <value>返品注文が正常に作成されました</value>
  </data>
  <data name="FailedToCreateReturnOrder" xml:space="preserve">
    <value>返品注文の作成に失敗しました</value>
  </data>
  <data name="UpdateReturnOrder" xml:space="preserve">
    <value>返品注文を更新する</value>
  </data>
  <data name="SuccessfullyEditedReturnOrder" xml:space="preserve">
    <value>返品注文が正常に編集されました</value>
  </data>
  <data name="FailedToEditReturnOrder" xml:space="preserve">
    <value>返品注文の編集に失敗しました</value>
  </data>
  <data name="DeleteReturnOrder" xml:space="preserve">
    <value>返品注文を削除する</value>
  </data>
  <data name="SuccessfullyDeletedReturnOrder" xml:space="preserve">
    <value>返品注文が正常に削除されました</value>
  </data>
  <data name="FailedToDeleteReturnOrder" xml:space="preserve">
    <value>返品注文の削除に失敗しました</value>
  </data>
  <data name="DoYouWantToCreateANewReceipt" xml:space="preserve">
    <value>新しい受取を作成しますか？</value>
  </data>
  <data name="FailedToCreateReceipt" xml:space="preserve">
    <value>受取の作成に失敗しました </value>
  </data>
  <data name="SuccessfullyCreatedReceipt" xml:space="preserve">
    <value>受取が正常に作成されました</value>
  </data>
  <data name="ProductIsRequired" xml:space="preserve">
    <value>商品は必須です</value>
  </data>
  <data name="ProductIsExisted" xml:space="preserve">
    <value>商品は存在しています</value>
  </data>
  <data name="FailedToSearchProducts" xml:space="preserve">
    <value>商品検索に失敗しました</value>
  </data>
  <data name="Return Order" xml:space="preserve">
    <value>返品注文</value>
  </data>
  <data name="ReturnFromDate" xml:space="preserve">
    <value>返品日から</value>
  </data>
  <data name="ReturnToDate" xml:space="preserve">
    <value>返品日まで</value>
  </data>
  <data name="AvailableReturnQty" xml:space="preserve">
    <value>返品可能な数量</value>
  </data>
  <data name="Returned quantity cannot be greater than packed quantity of shipment." xml:space="preserve">
    <value>返品数量は返品可能な数量を超えることはできません。</value>
  </data>
  <data name="ReceiptNo" xml:space="preserve">
    <value>入庫指示番号</value>
  </data>
</root>