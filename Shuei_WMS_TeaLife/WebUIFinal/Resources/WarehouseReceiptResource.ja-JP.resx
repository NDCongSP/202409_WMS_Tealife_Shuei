<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="ReceiptNo" xml:space="preserve">
    <value>指示番号</value>
  </data>
  <data name="ScheduledArrivalNumber" xml:space="preserve">
    <value>入荷予定番号</value>
  </data>
  <data name="ExpectedDate" xml:space="preserve">
    <value>入荷予定日</value>
  </data>
  <data name="CreateShelving" xml:space="preserve">
    <value>棚上げ作成</value>
  </data>
  <data name="ReceiptList" xml:space="preserve">
    <value>入庫指示一覧</value>
  </data>
  <data name="PersonInCharge" xml:space="preserve">
    <value>担当者</value>
  </data>
  <data name="Confirmation.CreateShelving" xml:space="preserve">
    <value>この指示の棚入れを作成しますか？</value>
  </data>
  <data name="Validation.CreateShelving" xml:space="preserve">
    <value>棚入れを作成する指示を選択してください</value>
  </data>
  <data name="CreatedShelvingSuccessfully" xml:space="preserve">
    <value>棚入れが正常に作成されました</value>
  </data>
  <data name="BackToReceiptOrderList" xml:space="preserve">
    <value>入荷指示一覧に戻る</value>
  </data>
  <data name="SearchReceiptRecords" xml:space="preserve">
    <value>入庫指示一覧</value>
  </data>
  <data name="ReceiptDetails" xml:space="preserve">
    <value>入庫詳細</value>
  </data>
  <data name="ReflectedHtInspectionResults" xml:space="preserve">
    <value>HT検品結果反映</value>
  </data>
  <data name="Receipt.OrderQty" xml:space="preserve">
    <value>入庫指示数</value>
  </data>
  <data name="Receipt.ActualQty" xml:space="preserve">
    <value>実入庫数</value>
  </data>
  <data name="Receipt.StockQty" xml:space="preserve">
    <value>総在庫数</value>
  </data>
  <data name="ExpirationDate" xml:space="preserve">
    <value>賞味期限</value>
  </data>
  <data name="Receipt.BasicInformation" xml:space="preserve">
    <value>基本情報</value>
  </data>
  <data name="FailedToGetReceipt" xml:space="preserve">
    <value>入荷指示の取得に失敗しました</value>
  </data>
  <data name="DoYouWantToCreateANewReceipt" xml:space="preserve">
    <value>新しい入荷指示を作成しますか？</value>
  </data>
  <data name="CreateReceipt" xml:space="preserve">
    <value>入荷指示作成</value>
  </data>
  <data name="SuccessfullyCreatedReceipt" xml:space="preserve">
    <value>入荷指示の作成に成功しました</value>
  </data>
  <data name="FailedToCreateReceipt" xml:space="preserve">
    <value>入荷指示の作成に失敗しました</value>
  </data>
  <data name="UpdateReceipt" xml:space="preserve">
    <value>入荷指示更新</value>
  </data>
  <data name="SuccessfullyEditedReceipt" xml:space="preserve">
    <value>入荷指示の編集に成功しました</value>
  </data>
  <data name="FailedToEditReceipt" xml:space="preserve">
    <value>入荷指示の編集に失敗しました</value>
  </data>
  <data name="CreateNewReceiptOrderLine" xml:space="preserve">
    <value>新規作成 入庫詳細</value>
  </data>
  <data name="AlreadyExists" xml:space="preserve">
    <value>はすでに存在します。</value>
  </data>
  <data name="ViewReceiptOrderLine" xml:space="preserve">
    <value>入荷オーダー明細を表示</value>
  </data>
  <data name="EditReceiptOrderLine" xml:space="preserve">
    <value>入荷オーダー明細を編集</value>
  </data>
  <data name="DataSyncedSuccessfully" xml:space="preserve">
    <value>データの同期が完了しました</value>
  </data>
  <data name="Confirmation.RequiredReceipt" xml:space="preserve">
    <value>入庫指示情報が必要です</value>
  </data>
  <data name="AdjustReceiptStatus" xml:space="preserve">
    <value>入荷指示のステータスを調整</value>
  </data>
  <data name="Confirmation.AdjustReceipt" xml:space="preserve">
    <value>この入荷指示を調整しますか？</value>
  </data>
  <data name="WarehouseReceipt" xml:space="preserve">
    <value>入庫指示</value>
  </data>
  <data name="CompletedReceipt" xml:space="preserve">
    <value>指示終了</value>
  </data>
  <data name="Draft" xml:space="preserve">
    <value>下書き</value>
  </data>
  <data name="Open" xml:space="preserve">
    <value>入荷待ち</value>
  </data>
  <data name="Received" xml:space="preserve">
    <value>入荷済み</value>
  </data>
  <data name="OnPutaway" xml:space="preserve">
    <value>棚上げ中</value>
  </data>
  <data name="Completed" xml:space="preserve">
    <value>完了</value>
  </data>
  <data name="Confirmation.NoProduct" xml:space="preserve">
    <value>There is no any product in this receipt to confirm.</value>
  </data>
  <data name="Confirmation.NoReceipt" xml:space="preserve">
    <value>This receipt does not exist to confirm</value>
  </data>
  <data name="EditReceiptOrder" xml:space="preserve">
    <value>入荷指示を編集</value>
  </data>
  <data name="CreateFromArrival" xml:space="preserve">
    <value>入荷予定から読み込む</value>
  </data>
  <data name="Confirmation.NoProductQty" xml:space="preserve">
    <value>Require actual quantity.</value>
  </data>
  <data name="ArrivalDataExist" xml:space="preserve">
    <value>到着データあり</value>
  </data>
  <data name="NotifyRemoveArrivalNo" xml:space="preserve">
    <value>この商品を削除すると、入荷予定番号はこの入荷指示から削除されます。削除してもよろしいですか</value>
  </data>
  <data name="ArrivalNoExisted" xml:space="preserve">
    <value>この入荷予定番号は既に入荷指示を作成されました。入荷指示を編集しますか</value>
  </data>
  <data name="TenantIsRequired" xml:space="preserve">
    <value>テナントは必須です</value>
  </data>
  <data name="LocationIsRequired" xml:space="preserve">
    <value>ロケーションは必須です</value>
  </data>
  <data name="Create" xml:space="preserve">
    <value>入庫指示作成</value>
  </data>
  <data name="Confirmation.BinLotRequired" xml:space="preserve">
    <value>Require Bin and Lot</value>
  </data>
  <data name="product expiry date is required" xml:space="preserve">
    <value>商品の賞味期限が必須です。</value>
  </data>
</root>